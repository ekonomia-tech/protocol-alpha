/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type { FunctionFragment, Result } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from "./common";

export interface DummyOracleInterface extends utils.Interface {
  functions: {
    "STETH_ADDRESS()": FunctionFragment;
    "WETH_ADDRESS()": FunctionFragment;
    "eth_pho_price()": FunctionFragment;
    "eth_ton_price()": FunctionFragment;
    "eth_usd_price()": FunctionFragment;
    "getETHPHOPrice()": FunctionFragment;
    "getETHTONPrice()": FunctionFragment;
    "getETHUSDPrice()": FunctionFragment;
    "getPHOUSDPrice()": FunctionFragment;
    "getPrice(address)": FunctionFragment;
    "getTONUSDPrice()": FunctionFragment;
    "getUSDCUSDPrice()": FunctionFragment;
    "getWethUSDPrice()": FunctionFragment;
    "pho_usd_price()": FunctionFragment;
    "priceFeeds(address)": FunctionFragment;
    "setETHPHOPrice(uint256)": FunctionFragment;
    "setETHTONPrice(uint256)": FunctionFragment;
    "setETHUSDPrice(uint256)": FunctionFragment;
    "setPHOUSDPrice(uint256)": FunctionFragment;
    "setTONUSDPrice(uint256)": FunctionFragment;
    "setUSDCUSDPrice(uint256)": FunctionFragment;
    "setWethUSDPrice(uint256)": FunctionFragment;
    "ton_usd_price()": FunctionFragment;
    "usdc_usd_price()": FunctionFragment;
    "weth_usd_price()": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "STETH_ADDRESS"
      | "WETH_ADDRESS"
      | "eth_pho_price"
      | "eth_ton_price"
      | "eth_usd_price"
      | "getETHPHOPrice"
      | "getETHTONPrice"
      | "getETHUSDPrice"
      | "getPHOUSDPrice"
      | "getPrice"
      | "getTONUSDPrice"
      | "getUSDCUSDPrice"
      | "getWethUSDPrice"
      | "pho_usd_price"
      | "priceFeeds"
      | "setETHPHOPrice"
      | "setETHTONPrice"
      | "setETHUSDPrice"
      | "setPHOUSDPrice"
      | "setTONUSDPrice"
      | "setUSDCUSDPrice"
      | "setWethUSDPrice"
      | "ton_usd_price"
      | "usdc_usd_price"
      | "weth_usd_price"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "STETH_ADDRESS",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "WETH_ADDRESS",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "eth_pho_price",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "eth_ton_price",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "eth_usd_price",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getETHPHOPrice",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getETHTONPrice",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getETHUSDPrice",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getPHOUSDPrice",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getPrice",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "getTONUSDPrice",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getUSDCUSDPrice",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getWethUSDPrice",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "pho_usd_price",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "priceFeeds",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "setETHPHOPrice",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "setETHTONPrice",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "setETHUSDPrice",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "setPHOUSDPrice",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "setTONUSDPrice",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "setUSDCUSDPrice",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "setWethUSDPrice",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "ton_usd_price",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "usdc_usd_price",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "weth_usd_price",
    values?: undefined
  ): string;

  decodeFunctionResult(
    functionFragment: "STETH_ADDRESS",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "WETH_ADDRESS",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "eth_pho_price",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "eth_ton_price",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "eth_usd_price",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getETHPHOPrice",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getETHTONPrice",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getETHUSDPrice",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getPHOUSDPrice",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "getPrice", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getTONUSDPrice",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getUSDCUSDPrice",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getWethUSDPrice",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "pho_usd_price",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "priceFeeds", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "setETHPHOPrice",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setETHTONPrice",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setETHUSDPrice",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setPHOUSDPrice",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setTONUSDPrice",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setUSDCUSDPrice",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setWethUSDPrice",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "ton_usd_price",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "usdc_usd_price",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "weth_usd_price",
    data: BytesLike
  ): Result;

  events: {};
}

export interface DummyOracle extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: DummyOracleInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    STETH_ADDRESS(overrides?: CallOverrides): Promise<[string]>;

    WETH_ADDRESS(overrides?: CallOverrides): Promise<[string]>;

    eth_pho_price(overrides?: CallOverrides): Promise<[BigNumber]>;

    eth_ton_price(overrides?: CallOverrides): Promise<[BigNumber]>;

    eth_usd_price(overrides?: CallOverrides): Promise<[BigNumber]>;

    getETHPHOPrice(overrides?: CallOverrides): Promise<[BigNumber]>;

    getETHTONPrice(overrides?: CallOverrides): Promise<[BigNumber]>;

    getETHUSDPrice(overrides?: CallOverrides): Promise<[BigNumber]>;

    getPHOUSDPrice(overrides?: CallOverrides): Promise<[BigNumber]>;

    getPrice(
      baseToken: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getTONUSDPrice(overrides?: CallOverrides): Promise<[BigNumber]>;

    getUSDCUSDPrice(overrides?: CallOverrides): Promise<[BigNumber]>;

    getWethUSDPrice(overrides?: CallOverrides): Promise<[BigNumber]>;

    pho_usd_price(overrides?: CallOverrides): Promise<[BigNumber]>;

    priceFeeds(
      arg0: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    setETHPHOPrice(
      _price: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    setETHTONPrice(
      _price: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    setETHUSDPrice(
      _price: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    setPHOUSDPrice(
      _price: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    setTONUSDPrice(
      _price: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    setUSDCUSDPrice(
      _price: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    setWethUSDPrice(
      _price: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    ton_usd_price(overrides?: CallOverrides): Promise<[BigNumber]>;

    usdc_usd_price(overrides?: CallOverrides): Promise<[BigNumber]>;

    weth_usd_price(overrides?: CallOverrides): Promise<[BigNumber]>;
  };

  STETH_ADDRESS(overrides?: CallOverrides): Promise<string>;

  WETH_ADDRESS(overrides?: CallOverrides): Promise<string>;

  eth_pho_price(overrides?: CallOverrides): Promise<BigNumber>;

  eth_ton_price(overrides?: CallOverrides): Promise<BigNumber>;

  eth_usd_price(overrides?: CallOverrides): Promise<BigNumber>;

  getETHPHOPrice(overrides?: CallOverrides): Promise<BigNumber>;

  getETHTONPrice(overrides?: CallOverrides): Promise<BigNumber>;

  getETHUSDPrice(overrides?: CallOverrides): Promise<BigNumber>;

  getPHOUSDPrice(overrides?: CallOverrides): Promise<BigNumber>;

  getPrice(
    baseToken: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getTONUSDPrice(overrides?: CallOverrides): Promise<BigNumber>;

  getUSDCUSDPrice(overrides?: CallOverrides): Promise<BigNumber>;

  getWethUSDPrice(overrides?: CallOverrides): Promise<BigNumber>;

  pho_usd_price(overrides?: CallOverrides): Promise<BigNumber>;

  priceFeeds(
    arg0: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  setETHPHOPrice(
    _price: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  setETHTONPrice(
    _price: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  setETHUSDPrice(
    _price: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  setPHOUSDPrice(
    _price: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  setTONUSDPrice(
    _price: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  setUSDCUSDPrice(
    _price: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  setWethUSDPrice(
    _price: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  ton_usd_price(overrides?: CallOverrides): Promise<BigNumber>;

  usdc_usd_price(overrides?: CallOverrides): Promise<BigNumber>;

  weth_usd_price(overrides?: CallOverrides): Promise<BigNumber>;

  callStatic: {
    STETH_ADDRESS(overrides?: CallOverrides): Promise<string>;

    WETH_ADDRESS(overrides?: CallOverrides): Promise<string>;

    eth_pho_price(overrides?: CallOverrides): Promise<BigNumber>;

    eth_ton_price(overrides?: CallOverrides): Promise<BigNumber>;

    eth_usd_price(overrides?: CallOverrides): Promise<BigNumber>;

    getETHPHOPrice(overrides?: CallOverrides): Promise<BigNumber>;

    getETHTONPrice(overrides?: CallOverrides): Promise<BigNumber>;

    getETHUSDPrice(overrides?: CallOverrides): Promise<BigNumber>;

    getPHOUSDPrice(overrides?: CallOverrides): Promise<BigNumber>;

    getPrice(
      baseToken: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getTONUSDPrice(overrides?: CallOverrides): Promise<BigNumber>;

    getUSDCUSDPrice(overrides?: CallOverrides): Promise<BigNumber>;

    getWethUSDPrice(overrides?: CallOverrides): Promise<BigNumber>;

    pho_usd_price(overrides?: CallOverrides): Promise<BigNumber>;

    priceFeeds(
      arg0: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    setETHPHOPrice(
      _price: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    setETHTONPrice(
      _price: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    setETHUSDPrice(
      _price: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    setPHOUSDPrice(
      _price: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    setTONUSDPrice(
      _price: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    setUSDCUSDPrice(
      _price: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    setWethUSDPrice(
      _price: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    ton_usd_price(overrides?: CallOverrides): Promise<BigNumber>;

    usdc_usd_price(overrides?: CallOverrides): Promise<BigNumber>;

    weth_usd_price(overrides?: CallOverrides): Promise<BigNumber>;
  };

  filters: {};

  estimateGas: {
    STETH_ADDRESS(overrides?: CallOverrides): Promise<BigNumber>;

    WETH_ADDRESS(overrides?: CallOverrides): Promise<BigNumber>;

    eth_pho_price(overrides?: CallOverrides): Promise<BigNumber>;

    eth_ton_price(overrides?: CallOverrides): Promise<BigNumber>;

    eth_usd_price(overrides?: CallOverrides): Promise<BigNumber>;

    getETHPHOPrice(overrides?: CallOverrides): Promise<BigNumber>;

    getETHTONPrice(overrides?: CallOverrides): Promise<BigNumber>;

    getETHUSDPrice(overrides?: CallOverrides): Promise<BigNumber>;

    getPHOUSDPrice(overrides?: CallOverrides): Promise<BigNumber>;

    getPrice(
      baseToken: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getTONUSDPrice(overrides?: CallOverrides): Promise<BigNumber>;

    getUSDCUSDPrice(overrides?: CallOverrides): Promise<BigNumber>;

    getWethUSDPrice(overrides?: CallOverrides): Promise<BigNumber>;

    pho_usd_price(overrides?: CallOverrides): Promise<BigNumber>;

    priceFeeds(
      arg0: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    setETHPHOPrice(
      _price: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    setETHTONPrice(
      _price: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    setETHUSDPrice(
      _price: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    setPHOUSDPrice(
      _price: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    setTONUSDPrice(
      _price: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    setUSDCUSDPrice(
      _price: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    setWethUSDPrice(
      _price: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    ton_usd_price(overrides?: CallOverrides): Promise<BigNumber>;

    usdc_usd_price(overrides?: CallOverrides): Promise<BigNumber>;

    weth_usd_price(overrides?: CallOverrides): Promise<BigNumber>;
  };

  populateTransaction: {
    STETH_ADDRESS(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    WETH_ADDRESS(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    eth_pho_price(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    eth_ton_price(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    eth_usd_price(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getETHPHOPrice(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getETHTONPrice(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getETHUSDPrice(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getPHOUSDPrice(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getPrice(
      baseToken: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getTONUSDPrice(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getUSDCUSDPrice(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getWethUSDPrice(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    pho_usd_price(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    priceFeeds(
      arg0: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    setETHPHOPrice(
      _price: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    setETHTONPrice(
      _price: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    setETHUSDPrice(
      _price: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    setPHOUSDPrice(
      _price: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    setTONUSDPrice(
      _price: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    setUSDCUSDPrice(
      _price: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    setWethUSDPrice(
      _price: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    ton_usd_price(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    usdc_usd_price(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    weth_usd_price(overrides?: CallOverrides): Promise<PopulatedTransaction>;
  };
}
