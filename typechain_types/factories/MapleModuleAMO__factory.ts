/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  MapleModuleAMO,
  MapleModuleAMOInterface,
} from "../MapleModuleAMO";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "address",
        name: "_stakingToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rewardToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "_module",
        type: "address",
      },
      {
        internalType: "address",
        name: "_depositToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_mplRewards",
        type: "address",
      },
      {
        internalType: "address",
        name: "_mplPool",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "CannotReceiveZeroMPT",
    type: "error",
  },
  {
    inputs: [],
    name: "CannotStakeWhenOperatorWithdrawing",
    type: "error",
  },
  {
    inputs: [],
    name: "CannotStakeZero",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyModule",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyOperator",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddressDetected",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "totalRewards",
        type: "uint256",
      },
    ],
    name: "MapleRewardsReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    name: "RewardPaid",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "shares",
        type: "uint256",
      },
    ],
    name: "Staked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "depositAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "shares",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cancelWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "claimedRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "depositToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "depositedAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "earned",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getReward",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getReward",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getRewardMaple",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "intendToWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "isWithdrawing",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "module",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mplPool",
    outputs: [
      {
        internalType: "contract IPool",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mplRewards",
    outputs: [
      {
        internalType: "contract IMplRewards",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "operator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "sharesOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "stakeFor",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "stakedAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stakingToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalShares",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "withdrawAllFor",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawFor",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620024d9380380620024d98339810160408190526200003491620006a7565b8851899089906200004d9060039060208501906200050e565b508051620000639060049060208401906200050e565b5050506001600160a01b03871615806200008457506001600160a01b038616155b806200009757506001600160a01b038516155b80620000aa57506001600160a01b038416155b80620000bd57506001600160a01b038316155b80620000d057506001600160a01b038216155b80620000e357506001600160a01b038116155b156200010257604051632887dd7560e11b815260040160405180910390fd5b600680546001600160a01b03199081166001600160a01b038a811691909117909255600580548216898416179055600780548216888416179055600880548216878416179055601180548216858416179055601280548216848416908117909155601080549092169286169283179091556200018e91906000196200019d602090811b6200100317901c565b5050505050505050506200088f565b604051636eb1769f60e11b81523060048201526001600160a01b038381166024830152600091839186169063dd62ed3e90604401602060405180830381865afa158015620001ef573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000215919062000794565b620002219190620007ae565b604080516001600160a01b038616602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b0390811663095ea7b360e01b179091529192506200027d918691906200028316565b50505050565b6000620002df826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166200036a60201b620010ee179092919060201c565b805190915015620003655780806020019051810190620003009190620007d5565b620003655760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084015b60405180910390fd5b505050565b60606200037b848460008562000383565b949350505050565b606082471015620003e65760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016200035c565b600080866001600160a01b0316858760405162000404919062000800565b60006040518083038185875af1925050503d806000811462000443576040519150601f19603f3d011682016040523d82523d6000602084013e62000448565b606091505b5090925090506200045c8783838762000467565b979650505050505050565b60608315620004db578251600003620004d3576001600160a01b0385163b620004d35760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016200035c565b50816200037b565b6200037b8383815115620004f25781518083602001fd5b8060405162461bcd60e51b81526004016200035c91906200081e565b8280546200051c9062000853565b90600052602060002090601f0160209004810192826200054057600085556200058b565b82601f106200055b57805160ff19168380011785556200058b565b828001600101855582156200058b579182015b828111156200058b5782518255916020019190600101906200056e565b50620005999291506200059d565b5090565b5b808211156200059957600081556001016200059e565b634e487b7160e01b600052604160045260246000fd5b60005b83811015620005e7578181015183820152602001620005cd565b838111156200027d5750506000910152565b600082601f8301126200060b57600080fd5b81516001600160401b0380821115620006285762000628620005b4565b604051601f8301601f19908116603f01168101908282118183101715620006535762000653620005b4565b816040528381528660208588010111156200066d57600080fd5b62000680846020830160208901620005ca565b9695505050505050565b80516001600160a01b0381168114620006a257600080fd5b919050565b60008060008060008060008060006101208a8c031215620006c757600080fd5b89516001600160401b0380821115620006df57600080fd5b620006ed8d838e01620005f9565b9a5060208c01519150808211156200070457600080fd5b50620007138c828d01620005f9565b9850506200072460408b016200068a565b96506200073460608b016200068a565b95506200074460808b016200068a565b94506200075460a08b016200068a565b93506200076460c08b016200068a565b92506200077460e08b016200068a565b9150620007856101008b016200068a565b90509295985092959850929598565b600060208284031215620007a757600080fd5b5051919050565b60008219821115620007d057634e487b7160e01b600052601160045260246000fd5b500190565b600060208284031215620007e857600080fd5b81518015158114620007f957600080fd5b9392505050565b6000825162000814818460208701620005ca565b9190910192915050565b60208152600082518060208401526200083f816040850160208701620005ca565b601f01601f19169190910160400192915050565b600181811c908216806200086857607f821691505b6020821081036200088957634e487b7160e01b600052602260045260246000fd5b50919050565b611c3a806200089f6000396000f3fe608060405234801561001057600080fd5b50600436106101fa5760003560e01c806372f702f31161011a578063b86d5298116100ad578063db518db21161007c578063db518db214610432578063dd62ed3e14610445578063f5eb42dc14610458578063f7c618c114610481578063f99318551461049457600080fd5b8063b86d5298146103d9578063bd834345146103ec578063c00007b01461040c578063c89039c51461041f57600080fd5b806395d89b41116100e957806395d89b4114610398578063a457c2d7146103a0578063a4b58b8b146103b3578063a9059cbb146103c657600080fd5b806372f702f31461036057806373ef9a501461037357806384b768241461037d5780638f1e1cd11461038557600080fd5b80633a98ef391161019257806355c32a391161016157806355c32a39146102e5578063570ca735146102f9578063587398001461032457806370a082311461033757600080fd5b80633a98ef39146102ad5780633c1a7ee8146102b55780633d18b912146102bd5780634a4643f7146102c557600080fd5b806323b872dd116101ce57806323b872dd146102655780632ee4090814610278578063313ce5671461028b578063395093511461029a57600080fd5b80628cc262146101ff57806306fdde0314610225578063095ea7b31461023a57806318160ddd1461025d575b600080fd5b61021261020d3660046119da565b6104b4565b6040519081526020015b60405180910390f35b61022d61051f565b60405161021c9190611a21565b61024d610248366004611a54565b6105b1565b604051901515815260200161021c565b600254610212565b61024d610273366004611a7e565b6105c9565b61024d610286366004611a54565b6105ed565b6040516012815260200161021c565b61024d6102a8366004611a54565b610983565b600a54610212565b6102126109a5565b61024d610ae6565b6102126102d33660046119da565b600c6020526000908152604090205481565b60125461024d90600160a01b900460ff1681565b60075461030c906001600160a01b031681565b6040516001600160a01b03909116815260200161021c565b61024d6103323660046119da565b610af9565b6102126103453660046119da565b6001600160a01b031660009081526020819052604090205490565b60065461030c906001600160a01b031681565b61037b610b1c565b005b61037b610bc4565b60115461030c906001600160a01b031681565b61022d610c66565b61024d6103ae366004611a54565b610c75565b60125461030c906001600160a01b031681565b61024d6103d4366004611a54565b610cf5565b60085461030c906001600160a01b031681565b6102126103fa3660046119da565b600e6020526000908152604090205481565b61024d61041a3660046119da565b610d03565b60105461030c906001600160a01b031681565b61024d610440366004611a54565b610da8565b610212610453366004611aba565b610fd8565b6102126104663660046119da565b6001600160a01b03166000908152600f602052604090205490565b60055461030c906001600160a01b031681565b6102126104a23660046119da565b600d6020526000908152604090205481565b6000806104c060025490565b9050806000036104d35750600092915050565b6001600160a01b0383166000908152600e6020908152604080832054600b5492849052922054839161050491611b03565b61050e9190611b22565b6105189190611b44565b9392505050565b60606003805461052e90611b5b565b80601f016020809104026020016040519081016040528092919081815260200182805461055a90611b5b565b80156105a75780601f1061057c576101008083540402835291602001916105a7565b820191906000526020600020905b81548152906001019060200180831161058a57829003601f168201915b5050505050905090565b6000336105bf818585611105565b5060019392505050565b6000336105d7858285611229565b6105e285858561129d565b506001949350505050565b6008546000906001600160a01b0316331461061b576040516309ce4f1960e11b815260040160405180910390fd5b8160000361063c57604051636a76ff9f60e01b815260040160405180910390fd5b601254600160a01b900460ff161561066757604051632ac1247360e21b815260040160405180910390fd5b60105461067f906001600160a01b0316843085611441565b6012546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa1580156106c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ec9190611b95565b60125460405163b6b55f2560e01b8152600481018690529192506001600160a01b03169063b6b55f2590602401600060405180830381600087803b15801561073357600080fd5b505af1158015610747573d6000803e3d6000fd5b50506012546040516370a0823160e01b8152306004820152600093508492506001600160a01b03909116906370a0823190602401602060405180830381865afa158015610798573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107bc9190611b95565b6107c69190611b44565b9050806000036107e957604051635c635a0360e11b815260040160405180910390fd5b6012546011546040516313fc8c2b60e11b81526001600160a01b039182166004820152602481018490529116906327f9185690604401600060405180830381600087803b15801561083957600080fd5b505af115801561084d573d6000803e3d6000fd5b505060115460405163534a7e1d60e11b8152600481018590526001600160a01b03909116925063a694fc3a9150602401600060405180830381600087803b15801561089757600080fd5b505af11580156108ab573d6000803e3d6000fd5b505050506001600160a01b0385166000908152600c6020526040812080548692906108d7908490611bae565b90915550506001600160a01b0385166000908152600d602052604081208054839290610904908490611bae565b92505081905550836009600082825461091d9190611bae565b909155506000905061092f8686611479565b60408051848152602081018390529192506001600160a01b038816917f1449c6dd7851abc30abf37f57715f492010519147cc2652fbc38202c18a6ee9091015b60405180910390a250600195945050505050565b6000336105bf8185856109968383610fd8565b6109a09190611bae565b611105565b6007546000906001600160a01b031633146109d3576040516327e1f1e560e01b815260040160405180910390fd5b601160009054906101000a90046001600160a01b03166001600160a01b0316633d18b9126040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610a2357600080fd5b505af1158015610a37573d6000803e3d6000fd5b50506005546040516370a0823160e01b81523060048201526001600160a01b0390911692506370a082319150602401602060405180830381865afa158015610a83573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aa79190611b95565b600b8190556040519081527fcb78fea6f1a1fcac7fa985ddf1e63ee271bfab1ca0de875e3b21c04113d89f029060200160405180910390a150600b5490565b6000610af133610d03565b506001905090565b6001600160a01b0381166000908152600c60205260408120546105bf8382610da8565b6007546001600160a01b03163314610b47576040516327e1f1e560e01b815260040160405180910390fd5b601260009054906101000a90046001600160a01b03166001600160a01b03166373ef9a506040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610b9757600080fd5b505af1158015610bab573d6000803e3d6000fd5b50506012805460ff60a01b1916600160a01b1790555050565b6007546001600160a01b03163314610bef576040516327e1f1e560e01b815260040160405180910390fd5b601260009054906101000a90046001600160a01b03166001600160a01b03166384b768246040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610c3f57600080fd5b505af1158015610c53573d6000803e3d6000fd5b50506012805460ff60a01b191690555050565b60606004805461052e90611b5b565b60003381610c838286610fd8565b905083811015610ce85760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6105e28286868403611105565b6000336105bf81858561129d565b600080610d0f836104b4565b90508015610d9f576001600160a01b0383166000908152600e602052604081208054839290610d3f908490611bae565b9091555050600554610d5b906001600160a01b031684836114db565b826001600160a01b03167fe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e048682604051610d9691815260200190565b60405180910390a25b50600192915050565b6008546000906001600160a01b03163314610dd6576040516309ce4f1960e11b815260040160405180910390fd5b6001600160a01b0383166000908152600c602081815260408084208054600d8452918520549390925292839190610e0d8380611b44565b90915550506001600160a01b0385166000908152600d602052604081208054839290610e3a908490611b44565b9091555050601154604051632e1a7d4d60e01b8152600481018390526001600160a01b0390911690632e1a7d4d90602401600060405180830381600087803b158015610e8557600080fd5b505af1158015610e99573d6000803e3d6000fd5b5050601254604051632e1a7d4d60e01b8152600481018690526001600160a01b039091169250632e1a7d4d9150602401600060405180830381600087803b158015610ee357600080fd5b505af1158015610ef7573d6000803e3d6000fd5b505050506000610f0686611510565b90508260096000828254610f1a9190611b44565b909155505060105460405163a9059cbb60e01b81526001600160a01b038881166004830152602482018690529091169063a9059cbb906044016020604051808303816000875af1158015610f72573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f969190611bc6565b5060408051848152602081018390526001600160a01b038816917f92ccf450a286a957af52509bc1c9939d1a6a481783e142e41e2499f0bb66ebc6910161096f565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b604051636eb1769f60e11b81523060048201526001600160a01b038381166024830152600091839186169063dd62ed3e90604401602060405180830381865afa158015611054573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110789190611b95565b6110829190611bae565b6040516001600160a01b0385166024820152604481018290529091506110e890859063095ea7b360e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611558565b50505050565b60606110fd848460008561162a565b949350505050565b6001600160a01b0383166111675760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610cdf565b6001600160a01b0382166111c85760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610cdf565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60006112358484610fd8565b905060001981146110e857818110156112905760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610cdf565b6110e88484848403611105565b6001600160a01b0383166113015760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610cdf565b6001600160a01b0382166113635760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610cdf565b6001600160a01b038316600090815260208190526040902054818110156113db5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610cdf565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36110e8565b6040516001600160a01b03808516602483015283166044820152606481018290526110e89085906323b872dd60e01b906084016110b1565b60008061148583611705565b6001600160a01b0385166000908152600f60205260408120805492935083929091906114b2908490611bae565b9250508190555080600a60008282546114cb9190611bae565b909155506105189050848261172f565b6040516001600160a01b03831660248201526044810182905261150b90849063a9059cbb60e01b906064016110b1565b505050565b6001600160a01b0381166000908152600f60205260408120805490829055600a80548291908490611542908490611b44565b90915550611552905083826117ee565b92915050565b60006115ad826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166110ee9092919063ffffffff16565b80519091501561150b57808060200190518101906115cb9190611bc6565b61150b5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610cdf565b60608247101561168b5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610cdf565b600080866001600160a01b031685876040516116a79190611be8565b60006040518083038185875af1925050503d80600081146116e4576040519150601f19603f3d011682016040523d82523d6000602084013e6116e9565b606091505b50915091506116fa87838387611920565b979650505050505050565b6000600a54600003611715575090565b600954600a546117259084611b03565b6115529190611b22565b6001600160a01b0382166117855760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610cdf565b80600260008282546117979190611bae565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6001600160a01b03821661184e5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610cdf565b6001600160a01b038216600090815260208190526040902054818110156118c25760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610cdf565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3505050565b6060831561198f578251600003611988576001600160a01b0385163b6119885760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610cdf565b50816110fd565b6110fd83838151156119a45781518083602001fd5b8060405162461bcd60e51b8152600401610cdf9190611a21565b80356001600160a01b03811681146119d557600080fd5b919050565b6000602082840312156119ec57600080fd5b610518826119be565b60005b83811015611a105781810151838201526020016119f8565b838111156110e85750506000910152565b6020815260008251806020840152611a408160408501602087016119f5565b601f01601f19169190910160400192915050565b60008060408385031215611a6757600080fd5b611a70836119be565b946020939093013593505050565b600080600060608486031215611a9357600080fd5b611a9c846119be565b9250611aaa602085016119be565b9150604084013590509250925092565b60008060408385031215611acd57600080fd5b611ad6836119be565b9150611ae4602084016119be565b90509250929050565b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615611b1d57611b1d611aed565b500290565b600082611b3f57634e487b7160e01b600052601260045260246000fd5b500490565b600082821015611b5657611b56611aed565b500390565b600181811c90821680611b6f57607f821691505b602082108103611b8f57634e487b7160e01b600052602260045260246000fd5b50919050565b600060208284031215611ba757600080fd5b5051919050565b60008219821115611bc157611bc1611aed565b500190565b600060208284031215611bd857600080fd5b8151801515811461051857600080fd5b60008251611bfa8184602087016119f5565b919091019291505056fea2646970667358221220f27d1871ccd50ec126fd16b21cddf428bd1a46268a9af4d510dea99e912db37b64736f6c634300080d0033";

type MapleModuleAMOConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MapleModuleAMOConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MapleModuleAMO__factory extends ContractFactory {
  constructor(...args: MapleModuleAMOConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    _stakingToken: PromiseOrValue<string>,
    _rewardToken: PromiseOrValue<string>,
    _operator: PromiseOrValue<string>,
    _module: PromiseOrValue<string>,
    _depositToken: PromiseOrValue<string>,
    _mplRewards: PromiseOrValue<string>,
    _mplPool: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MapleModuleAMO> {
    return super.deploy(
      _name,
      _symbol,
      _stakingToken,
      _rewardToken,
      _operator,
      _module,
      _depositToken,
      _mplRewards,
      _mplPool,
      overrides || {}
    ) as Promise<MapleModuleAMO>;
  }
  override getDeployTransaction(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    _stakingToken: PromiseOrValue<string>,
    _rewardToken: PromiseOrValue<string>,
    _operator: PromiseOrValue<string>,
    _module: PromiseOrValue<string>,
    _depositToken: PromiseOrValue<string>,
    _mplRewards: PromiseOrValue<string>,
    _mplPool: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _name,
      _symbol,
      _stakingToken,
      _rewardToken,
      _operator,
      _module,
      _depositToken,
      _mplRewards,
      _mplPool,
      overrides || {}
    );
  }
  override attach(address: string): MapleModuleAMO {
    return super.attach(address) as MapleModuleAMO;
  }
  override connect(signer: Signer): MapleModuleAMO__factory {
    return super.connect(signer) as MapleModuleAMO__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MapleModuleAMOInterface {
    return new utils.Interface(_abi) as MapleModuleAMOInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MapleModuleAMO {
    return new Contract(address, _abi, signerOrProvider) as MapleModuleAMO;
  }
}
